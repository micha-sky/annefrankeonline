{"version":3,"sources":["js/demo6.js"],"names":["sketch","Sketch","debug","uniforms","intensity","value","type","min","max","fragment"],"mappings":";AAEA,IAAIA,EAAS,IAAIC,OAAO,CACvBC,OAAO,EACPC,SAAU,CACTC,UAAW,CAACC,MAAO,EAAGC,KAAK,IAAKC,IAAI,EAAIC,IAAI,IAE7CC,SAAQ","file":"demo6.4531c810.js","sourceRoot":"..","sourcesContent":["\n// planetary\nlet sketch = new Sketch({\n\tdebug: true,\n\tuniforms: {\n\t\tintensity: {value: 1, type:'f', min:0., max:3}\n\t},\n\tfragment: `\n\t\tuniform float time;\n\t\tuniform float progress;\n\t\tuniform float intensity;\n\t\tuniform float width;\n\t\tuniform float scaleX;\n\t\tuniform float scaleY;\n\t\tuniform float transition;\n\t\tuniform float radius;\n\t\tuniform float swipe;\n\t\tuniform sampler2D texture1;\n\t\tuniform sampler2D texture2;\n\t\tuniform sampler2D displacement;\n\t\tuniform vec4 resolution;\n\t\tvarying vec2 vUv;\n\t\tmat2 getRotM(float angle) {\n\t\t    float s = sin(angle);\n\t\t    float c = cos(angle);\n\t\t    return mat2(c, -s, s, c);\n\t\t}\n\t\tconst float PI = 3.1415;\n\t\tconst float angle1 = PI *0.25;\n\t\tconst float angle2 = -PI *0.75;\n\n\n\t\tvoid main()\t{\n\t\t\tvec2 newUV = (vUv - vec2(0.5))*resolution.zw + vec2(0.5);\n\n\t\t\tvec4 disp = texture2D(displacement, newUV);\n\t\t\tvec2 dispVec = vec2(disp.r, disp.g);\n\n\t\t\tvec2 distortedPosition1 = newUV + getRotM(angle1) * dispVec * intensity * progress;\n\t\t\tvec4 t1 = texture2D(texture1, distortedPosition1);\n\n\t\t\tvec2 distortedPosition2 = newUV + getRotM(angle2) * dispVec * intensity * (1.0 - progress);\n\t\t\tvec4 t2 = texture2D(texture2, distortedPosition2);\n\n\t\t\tgl_FragColor = mix(t1, t2, progress);\n\n\t\t}\n\n\t`\n});\n\n\n"]}